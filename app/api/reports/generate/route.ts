import { NextRequest, NextResponse } from 'next/server';
import ExcelJS from 'exceljs';
import connectToDatabase from '@/app/lib/mongodb';
import Token from '@/app/lib/models/Token';

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
interface RealizationDetailItem {
  realizationreport_id?: string;
  date_from?: string;
  date_to?: string;
  create_dt?: string;
  currency_name?: string;
  suppliercontract_code?: string;
  rrd_id?: string;
  gi_id?: string;
  subject_name?: string;
  nm_id?: number;
  brand_name?: string;
  sa_name?: string;
  ts_name?: string;
  barcode?: string;
  doc_type_name?: string;
  quantity?: number;
  retail_price?: number;
  retail_amount?: number;
  sale_percent?: number;
  commission_percent?: number;
  office_name?: string;
  supplier_oper_name?: string;
  order_dt?: string;
  sale_dt?: string;
  rr_dt?: string;
  shk_id?: string;
  retail_price_withdisc_rub?: number;
  delivery_amount?: number;
  return_amount?: number;
  delivery_rub?: number;
  gi_box_type_name?: string;
  product_discount_for_report?: number;
  supplier_promo?: number;
  rid?: string;
  ppvz_spp_prc?: number;
  ppvz_kvw_prc_base?: number;
  ppvz_kvw_prc?: number;
  sup_rating_prc_up?: number;
  is_kgvp_v2?: number;
  ppvz_sales_commission?: number;
  ppvz_for_pay?: number;
  ppvz_reward?: number;
  acquiring_fee?: number;
  acquiring_percent?: number;
  acquiring_bank?: string;
  ppvz_vw?: number;
  ppvz_vw_nds?: number;
  ppvz_office_id?: string;
  ppvz_office_name?: string;
  ppvz_supplier_id?: string;
  ppvz_supplier_name?: string;
  ppvz_inn?: string;
  declaration_number?: string;
  bonus_type_name?: string;
  sticker_id?: string;
  site_country?: string;
  penalty?: number;
  additional_payment?: number;
  rebill_logistic_cost?: number;
  rebill_logistic_org?: string;
  kiz?: string;
  storage_fee?: number;
  deduction?: number;
  acceptance?: number;
  srid?: string;
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
async function fetchRealizationDetailData(apiKey: string, dateFrom: string, dateTo: string): Promise<RealizationDetailItem[]> {
  console.log(`üìä –ù–∞—á–∞–ª–æ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: ${dateFrom} - ${dateTo}`);
  
  // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç RFC3339
  const startDate = new Date(dateFrom + 'T00:00:00Z').toISOString();
  const endDate = new Date(dateTo + 'T23:59:59Z').toISOString();
  
  console.log(`üìÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞—Ç—ã: ${startDate} - ${endDate}`);
  
  const allData: RealizationDetailItem[] = [];
  let rrd_id = 0;
  let hasMoreData = true;
  let attempts = 0;
  const maxAttempts = 50; // –ú–∞–∫—Å–∏–º—É–º 50 —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
  
  while (hasMoreData && attempts < maxAttempts) {
    attempts++;
    console.log(`üìÑ –ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã ${attempts}, rrd_id: ${rrd_id}`);
    
    try {
      const url = `https://statistics-api.wildberries.ru/api/v5/supplier/reportDetailByPeriod?dateFrom=${startDate}&dateTo=${endDate}&limit=100000&rrd_id=${rrd_id}`;
      console.log(`üåê URL: ${url}`);
      
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Authorization': apiKey,
          'Content-Type': 'application/json'
        }
      });

      console.log(`üì° –û—Ç–≤–µ—Ç API: ${response.status} ${response.statusText}`);

      if (!response.ok) {
        const errorText = await response.text();
        console.error(`‚ùå –û—à–∏–±–∫–∞ API –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: ${response.status}`, errorText);
        
        if (response.status === 401) {
          throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π API —Ç–æ–∫–µ–Ω');
        } else if (response.status === 429) {
          console.log('‚è≥ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –∂–¥–µ–º 65 —Å–µ–∫—É–Ω–¥...');
          await new Promise(resolve => setTimeout(resolve, 65000));
          continue; // –ü–æ–≤—Ç–æ—Ä—è–µ–º —Ç–æ—Ç –∂–µ –∑–∞–ø—Ä–æ—Å
        } else if (response.status === 400) {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–∏–æ–¥ –¥–∞—Ç.');
        }
        throw new Error(`–û—à–∏–±–∫–∞ API: ${response.status} ${response.statusText}`);
      }

      const data = await response.json();
      console.log(`üì¶ –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${Array.isArray(data) ? data.length : 0}`);
      
      if (!Array.isArray(data) || data.length === 0) {
        console.log('üìÑ –ë–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç, –∑–∞–≤–µ—Ä—à–∞–µ–º');
        hasMoreData = false;
        break;
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (—Ñ–∏–ª—å—Ç—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞)
      if (attempts === 1) {
        // –ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –¥–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        allData.push(...data);
      } else {
        // –ü–æ—Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –∏—Å–∫–ª—é—á–∞–µ–º –ø–µ—Ä–≤—É—é –∑–∞–ø–∏—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –¥—É–±–ª–∏—Ä—É–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        const filteredData = data.filter((item, index) => {
          if (index === 0) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å
            return !allData.some(existingItem => existingItem.rrd_id === item.rrd_id);
          }
          return true;
        });
        allData.push(...filteredData);
        console.log(`üì¶ –ü–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: ${filteredData.length} –∑–∞–ø–∏—Å–µ–π`);
      }
      
      // –ü–æ–ª—É—á–∞–µ–º rrd_id –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      const lastItem = data[data.length - 1];
      const nextRrdId = lastItem?.rrd_id;
      
      if (nextRrdId && nextRrdId !== rrd_id) {
        rrd_id = nextRrdId;
        console.log(`‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–π rrd_id: ${rrd_id}`);
      } else {
        console.log('üìÑ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –∫–æ–Ω–µ—Ü –¥–∞–Ω–Ω—ã—Ö');
        hasMoreData = false;
      }

      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (1 –∑–∞–ø—Ä–æ—Å –≤ –º–∏–Ω—É—Ç—É)
      if (hasMoreData) {
        console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 65 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏...');
        await new Promise(resolve => setTimeout(resolve, 65000));
      }

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ${attempts}:`, error);
      throw error;
    }
  }

  console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ –≤—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π –¥–æ –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏: ${allData.length}`);
  
  // –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏—è –ø–æ rrd_id –¥–ª—è –ø–æ–ª–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏
  const uniqueData = allData.filter((item, index, array) => {
    return array.findIndex(t => t.rrd_id === item.rrd_id) === index;
  });
  
  const duplicatesCount = allData.length - uniqueData.length;
  if (duplicatesCount > 0) {
    console.log(`üîç –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: ${duplicatesCount}`);
  }
  
  console.log(`‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: ${uniqueData.length} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –∑–∞ ${attempts} –∑–∞–ø—Ä–æ—Å–æ–≤`);
  return uniqueData;
}








export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { reportType, startDate, endDate, tokenId } = body;

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
    const workbook = new ExcelJS.Workbook();
    const worksheet = workbook.addWorksheet('–û—Ç—á—ë—Ç');

    let headers: string[] = [];
    let fileName = '';

    switch (reportType) {
      case 'details':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let detailsTokenDoc;
        try {
          detailsTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!detailsTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏...');
        const detailsStartTime = Date.now();

        fileName = `–û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ - ${startDate}‚Äì${endDate}.xlsx`;

        try {
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
          const realizationData = await fetchRealizationDetailData(detailsTokenDoc.apiKey, startDate, endDate);

          console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: ${realizationData.length}`);

          if (realizationData && realizationData.length > 0) {
            console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏...");
            
                        // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç—É
            headers = [
              '–ù–æ–º–µ—Ä –æ—Ç—á—ë—Ç–∞',
              '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ—Ç—á—ë—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞',
              '–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞ –æ—Ç—á—ë—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞',
              '–î–∞—Ç–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞',
              '–í–∞–ª—é—Ç–∞ –æ—Ç—á—ë—Ç–∞',
              '–î–æ–≥–æ–≤–æ—Ä',
              '–ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏',
              '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ü—Ä–µ–¥–º–µ—Ç',
              '–ê—Ä—Ç–∏–∫—É–ª WB',
              '–ë—Ä–µ–Ω–¥',
              '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
              '–†–∞–∑–º–µ—Ä',
              '–ë–∞—Ä–∫–æ–¥',
              '–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è',
              '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ (–≤–æ–∑–≤—Ä–∞—Ç–æ–≤)',
              '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞',
              '–ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏',
              '–°–∫–ª–∞–¥',
              '–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã',
              '–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞',
              '–î–∞—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏',
              '–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏',
              '–®—Ç—Ä–∏—Ö-–∫–æ–¥',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Å —É—á–µ—Ç–æ–º —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–π —Å–∫–∏–¥–∫–∏',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∞–≤–æ–∫',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏',
              '–¢–∏–ø –∫–æ—Ä–æ–±–æ–≤',
              '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –¥–∏—Å–∫–æ–Ω—Ç',
              '–ü—Ä–æ–º–æ–∫–æ–¥',
              '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä',
              '–°–∫–∏–¥–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è',
              '–†–∞–∑–º–µ—Ä –∫–í–í –±–µ–∑ –ù–î–°, %',
              '–ò—Ç–æ–≥–æ–≤—ã–π –∫–í–í –±–µ–∑ –ù–î–°, %',
              '–†–∞–∑–º–µ—Ä —Å–Ω–∏–∂–µ–Ω–∏—è –∫–í–í –∏–∑-–∑–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞',
              '–†–∞–∑–º–µ—Ä —Å–Ω–∏–∂–µ–Ω–∏—è –∫–í–í –∏–∑-–∑–∞ –∞–∫—Ü–∏–∏',
              '–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ —Å –ø—Ä–æ–¥–∞–∂–∏ –¥–æ –≤—ã—á–µ—Ç–∞',
              '–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –ø—Ä–æ–¥–∞–≤—Ü—É',
              '–í–æ–∑–º–µ—â–µ–Ω–∏–µ –∑–∞ –≤—ã–¥–∞—á—É –∏ –≤–æ–∑–≤—Ä–∞—Ç',
              '–í–æ–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–¥–µ—Ä–∂–µ–∫ –ø–æ —ç–∫–≤–∞–π—Ä–∏–Ω–≥—É',
              '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞-—ç–∫–≤–∞–π–µ—Ä–∞',
              '–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ WB –±–µ–∑ –ù–î–°',
              '–ù–î–° —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è WB',
              '–ù–æ–º–µ—Ä –æ—Ñ–∏—Å–∞',
              '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ñ–∏—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏',
              '–ù–æ–º–µ—Ä –ø–∞—Ä—Ç–Ω–µ—Ä–∞',
              '–ü–∞—Ä—Ç–Ω–µ—Ä',
              '–ò–ù–ù',
              '–ù–æ–º–µ—Ä —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏',
              '–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤ –∏ –¥–æ–ø–ª–∞—Ç',
              '–¶–∏—Ñ—Ä–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –∫–ª–µ–∏—Ç—Å—è –Ω–∞ —Ç–æ–≤–∞—Ä',
              '–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏',
              '–®—Ç—Ä–∞—Ñ—ã',
              '–î–æ–ø–ª–∞—Ç—ã',
              '–í–æ–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–¥–µ—Ä–∂–µ–∫ –ø–æ',
              '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –ø–µ—Ä–µ–≤–æ–∑–∫–∏',
              '–ö–æ–¥ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è',
              '–ü—Ä–æ—á–∏–µ —É–¥–µ—Ä–∂–∞–Ω–∏—è/–≤—ã–ø–ª–∞—Ç—ã',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏',
              '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∞'
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            worksheet.addRow(headers);
            const headerRow = worksheet.getRow(1);
            headerRow.font = { bold: true };
            headerRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };
            
            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = Math.max(header.length + 2, 12);
          });

          // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            realizationData.forEach(item => {
            worksheet.addRow([
                item.realizationreport_id || '',
                item.date_from ? new Date(item.date_from).toLocaleDateString('ru-RU') : '',
                item.date_to ? new Date(item.date_to).toLocaleDateString('ru-RU') : '',
                item.create_dt ? new Date(item.create_dt).toLocaleDateString('ru-RU') : '',
                item.currency_name || '',
                item.suppliercontract_code || '',
                item.rrd_id || '',
                item.gi_id || '',
                item.subject_name || '',
                item.nm_id || '',
                item.brand_name || '',
                item.sa_name || '',
                item.ts_name || '',
                item.barcode || '',
                item.doc_type_name || '',
                item.quantity || 0,
                item.retail_price || 0,
                item.retail_amount || 0,
                item.sale_percent || 0,
                item.commission_percent || 0,
                item.office_name || '',
                item.supplier_oper_name || '',
                item.order_dt ? new Date(item.order_dt).toLocaleDateString('ru-RU') : '',
                item.sale_dt ? new Date(item.sale_dt).toLocaleDateString('ru-RU') : '',
                item.rr_dt ? new Date(item.rr_dt).toLocaleDateString('ru-RU') : '',
                item.shk_id || '',
                item.retail_price_withdisc_rub || 0,
                item.delivery_amount || 0,
                item.return_amount || 0,
                item.delivery_rub || 0,
                item.gi_box_type_name || '',
                item.product_discount_for_report || 0,
                item.supplier_promo || 0,
                item.rid || '',
                item.ppvz_spp_prc || 0,
                item.ppvz_kvw_prc_base || 0,
                item.ppvz_kvw_prc || 0,
                item.sup_rating_prc_up || 0,
                item.is_kgvp_v2 || 0,
                item.ppvz_sales_commission || 0,
                item.ppvz_for_pay || 0,
                item.ppvz_reward || 0,
                item.acquiring_fee || 0,
                item.acquiring_percent || 0,
                item.acquiring_bank || '',
                item.ppvz_vw || 0,
                item.ppvz_vw_nds || 0,
                item.ppvz_office_id || '',
                item.ppvz_supplier_id || '',
                item.ppvz_supplier_name || '',
                item.ppvz_inn || '',
                item.declaration_number || '',
                item.bonus_type_name || '',
                item.sticker_id || '',
                item.site_country || '',
                item.penalty || 0,
                item.additional_payment || 0,
                item.rebill_logistic_cost || 0,
                item.rebill_logistic_org || '',
                item.kiz || '',
                item.storage_fee || 0,
                item.deduction || 0,
                item.acceptance || 0,
                item.srid || ''
            ]);
          });

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ñ–æ—Ä–º—É–ª—ã –≤ —Å—Ç–æ–ª–±–µ—Ü BN "–î–∞—Ç—ã –æ—Ç—á–µ—Ç–∞"
            console.log("üìù –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü '–î–∞—Ç—ã –æ—Ç—á–µ—Ç–∞' –≤ BN...");
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ BN1
            worksheet.getCell('BN1').value = '–î–∞—Ç—ã –æ—Ç—á–µ—Ç–∞';
            
            // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É–ª—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
            for (let rowIndex = 2; rowIndex <= realizationData.length + 1; rowIndex++) {
              const cell = worksheet.getCell(`BN${rowIndex}`);
              cell.value = { formula: `B${rowIndex}&" - "&C${rowIndex}` };
            }

            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (—á–∏—Å–ª–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç —Å 2 –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π)
            const numericColumns = [16, 17, 18, 27, 28, 29, 30, 40, 41, 42, 43, 45, 46, 55, 56, 60, 61, 62]; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, –¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è, –°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂, –¶–µ–Ω–∞ —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∞–≤–æ–∫, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤, –°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏, –ö–æ–º–∏—Å—Å–∏—è –∑–∞ –ø—Ä–æ–¥–∞–∂–∏, –ö –¥–æ–ø–ª–∞—Ç–µ, –í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ, –≠–∫–≤–∞–π—Ä–∏–Ω–≥, –õ–æ–≥–∏—Å—Ç–∏–∫–∞ –í–í, –ù–î–° –ª–æ–≥–∏—Å—Ç–∏–∫–∏ –í–í, –®—Ç—Ä–∞—Ñ—ã, –î–æ–ø–ª–∞—Ç—ã, –°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è, –ü—Ä–æ—á–∏–µ —É–¥–µ—Ä–∂–∞–Ω–∏—è, –°—Ç–æ–∏–º–æ—Å—Ç—å –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏
            numericColumns.forEach(columnIndex => {
              const column = worksheet.getColumn(columnIndex);
              column.eachCell((cell, rowNumber) => {
                if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                  // –†–æ—Å—Å–∏–π—Å–∫–∏–π —á–∏—Å–ª–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç —Å –∑–∞–ø—è—Ç–æ–π –∫–∞–∫ –¥–µ—Å—è—Ç–∏—á–Ω—ã–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                  cell.numFmt = '[$-419]# ##0,00';
                  cell.value = Number(cell.value) || 0; // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –¥–µ–ª–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–æ–º
                }
              });
            });

            // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –ª–∏—Å—Ç "–¢–æ–≤–∞—Ä—ã"
            const productsWorksheet = workbook.addWorksheet('–¢–æ–≤–∞—Ä—ã');
            const productHeaders = ['–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞', '–ê—Ä—Ç–∏–∫—É–ª WB'];
            const productHeaderRow = productsWorksheet.addRow(productHeaders);
            productHeaderRow.font = { bold: true };
            productHeaderRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };
            productsWorksheet.getColumn(1).width = 30;
            productsWorksheet.getColumn(2).width = 20;

            // –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
            const uniqueProducts = new Map<string, { vendorCode: string, nmId: number }>();
            realizationData.forEach(item => {
              if (item.nm_id) {
                const key = `${item.nm_id}`;
                if (!uniqueProducts.has(key)) {
                  uniqueProducts.set(key, {
                    vendorCode: item.sa_name || '',
                    nmId: item.nm_id
                  });
                }
              }
            });

            // –î–æ–±–∞–≤–ª—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –Ω–∞ –ª–∏—Å—Ç
            uniqueProducts.forEach(prod => {
              productsWorksheet.addRow([prod.vendorCode, prod.nmId]);
            });


            console.log(`‚úÖ –û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - detailsStartTime}ms —Å ${realizationData.length} –∑–∞–ø–∏—Å—è–º–∏`);
            
          } else {
            console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
            
                        // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
            headers = [
              '–ù–æ–º–µ—Ä –æ—Ç—á—ë—Ç–∞',
              '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –æ—Ç—á—ë—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞',
              '–î–∞—Ç–∞ –∫–æ–Ω—Ü–∞ –æ—Ç—á—ë—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞',
              '–î–∞—Ç–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞',
              '–í–∞–ª—é—Ç–∞ –æ—Ç—á—ë—Ç–∞',
              '–î–æ–≥–æ–≤–æ—Ä',
              '–ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏',
              '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ü—Ä–µ–¥–º–µ—Ç',
              '–ê—Ä—Ç–∏–∫—É–ª WB',
              '–ë—Ä–µ–Ω–¥',
              '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
              '–†–∞–∑–º–µ—Ä',
              '–ë–∞—Ä–∫–æ–¥',
              '–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è',
              '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂ (–≤–æ–∑–≤—Ä–∞—Ç–æ–≤)',
              '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞',
              '–ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∏—Å—Å–∏–∏',
              '–°–∫–ª–∞–¥',
              '–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ–ø–ª–∞—Ç—ã',
              '–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞',
              '–î–∞—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏',
              '–î–∞—Ç–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏',
              '–®—Ç—Ä–∏—Ö-–∫–æ–¥',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Å —É—á–µ—Ç–æ–º —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–π —Å–∫–∏–¥–∫–∏',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ—Å—Ç–∞–≤–æ–∫',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏',
              '–¢–∏–ø –∫–æ—Ä–æ–±–æ–≤',
              '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç–æ–≤—ã–π –¥–∏—Å–∫–æ–Ω—Ç',
              '–ü—Ä–æ–º–æ–∫–æ–¥',
              '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä',
              '–°–∫–∏–¥–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è',
              '–†–∞–∑–º–µ—Ä –∫–í–í –±–µ–∑ –ù–î–°, %',
              '–ò—Ç–æ–≥–æ–≤—ã–π –∫–í–í –±–µ–∑ –ù–î–°, %',
              '–†–∞–∑–º–µ—Ä —Å–Ω–∏–∂–µ–Ω–∏—è –∫–í–í –∏–∑-–∑–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞',
              '–†–∞–∑–º–µ—Ä —Å–Ω–∏–∂–µ–Ω–∏—è –∫–í–í –∏–∑-–∑–∞ –∞–∫—Ü–∏–∏',
              '–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ —Å –ø—Ä–æ–¥–∞–∂–∏ –¥–æ –≤—ã—á–µ—Ç–∞',
              '–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –ø—Ä–æ–¥–∞–≤—Ü—É',
              '–í–æ–∑–º–µ—â–µ–Ω–∏–µ –∑–∞ –≤—ã–¥–∞—á—É –∏ –≤–æ–∑–≤—Ä–∞—Ç',
              '–í–æ–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–¥–µ—Ä–∂–µ–∫ –ø–æ —ç–∫–≤–∞–π—Ä–∏–Ω–≥—É',
              '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞-—ç–∫–≤–∞–π–µ—Ä–∞',
              '–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ WB –±–µ–∑ –ù–î–°',
              '–ù–î–° —Å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è WB',
              '–ù–æ–º–µ—Ä –æ—Ñ–∏—Å–∞',
              '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ñ–∏—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏',
              '–ù–æ–º–µ—Ä –ø–∞—Ä—Ç–Ω–µ—Ä–∞',
              '–ü–∞—Ä—Ç–Ω–µ—Ä',
              '–ò–ù–ù',
              '–ù–æ–º–µ—Ä —Ç–∞–º–æ–∂–µ–Ω–Ω–æ–π –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏',
              '–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ —à—Ç—Ä–∞—Ñ–æ–≤ –∏ –¥–æ–ø–ª–∞—Ç',
              '–¶–∏—Ñ—Ä–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –∫–ª–µ–∏—Ç—Å—è –Ω–∞ —Ç–æ–≤–∞—Ä',
              '–°—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏',
              '–®—Ç—Ä–∞—Ñ—ã',
              '–î–æ–ø–ª–∞—Ç—ã',
              '–í–æ–∑–º–µ—â–µ–Ω–∏–µ –∏–∑–¥–µ—Ä–∂–µ–∫ –ø–æ',
              '–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –ø–µ—Ä–µ–≤–æ–∑–∫–∏',
              '–ö–æ–¥ –º–∞—Ä–∫–∏—Ä–æ–≤–∫–∏',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è',
              '–ü—Ä–æ—á–∏–µ —É–¥–µ—Ä–∂–∞–Ω–∏—è/–≤—ã–ø–ª–∞—Ç—ã',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏',
              '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ—Ä–∞'
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            worksheet.addRow(headers);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ "–î–∞—Ç—ã –æ—Ç—á–µ—Ç–∞" –≤ BN1 –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            worksheet.getCell('BN1').value = '–î–∞—Ç—ã –æ—Ç—á–µ—Ç–∞';
            const emptyHeaderRow = worksheet.getRow(1);
            emptyHeaderRow.font = { bold: true };
            emptyHeaderRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };
            
            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = Math.max(header.length + 2, 12);
            });
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
          return NextResponse.json({ 
            error: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
          }, { status: 500 });
        }
        break;

      case 'products':

        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let productsTokenDoc;
        try {
          productsTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!productsTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...');
        const productsStartTime = Date.now();

                 // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏
         const { getCostPriceData, transformCostPriceToExcel, loadSavedCostPrices } = await import('@/app/lib/product-utils');

         // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
         const savedCostPrices = await loadSavedCostPrices(tokenId);

         // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
        const costPriceData = await getCostPriceData(productsTokenDoc.apiKey, savedCostPrices);

        fileName = `–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ - ${startDate}‚Äì${endDate}.xlsx`;

        if (costPriceData && costPriceData.length > 0) {
          console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏...");
          
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
          const productsExcelData = transformCostPriceToExcel(costPriceData);

          headers = [
            '–ê—Ä—Ç–∏–∫—É–ª –í–ë',
            '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
            '–ü—Ä–µ–¥–º–µ—Ç',
            '–ë—Ä–µ–Ω–¥',
            '–†–∞–∑–º–µ—Ä',
            '–®—Ç—Ä–∏—Ö–∫–æ–¥',
            '–¶–µ–Ω–∞',
            '–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å',
            '–ú–∞—Ä–∂–∞',
            '–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (%)',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö',
            '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
          ];

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
          worksheet.addRow(headers);
          const productsHeaderRow = worksheet.getRow(1);
          productsHeaderRow.font = { bold: true };
          productsHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };

          // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
          const productsColumnWidths = [
            { wch: 15 }, // –ê—Ä—Ç–∏–∫—É–ª –í–ë
            { wch: 20 }, // –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞
            { wch: 35 }, // –ü—Ä–µ–¥–º–µ—Ç
            { wch: 15 }, // –ë—Ä–µ–Ω–¥
            { wch: 15 }, // –†–∞–∑–º–µ—Ä
            { wch: 15 }, // –®—Ç—Ä–∏—Ö–∫–æ–¥
            { wch: 15 }, // –¶–µ–Ω–∞
            { wch: 15 }, // –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å
            { wch: 15 }, // –ú–∞—Ä–∂–∞
            { wch: 20 }, // –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å
            { wch: 20 }, // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
            { wch: 20 }, // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
            { wch: 20 }, // –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          ];

          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = productsColumnWidths[index]?.wch || Math.max(header.length + 5, 15);
          });

          // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
          productsExcelData.forEach(item => {
            worksheet.addRow([
              item["–ê—Ä—Ç–∏–∫—É–ª –í–ë"],
              item["–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞"],
              item["–ü—Ä–µ–¥–º–µ—Ç"],
              item["–ë—Ä–µ–Ω–¥"],
              item["–†–∞–∑–º–µ—Ä"],
              item["–®—Ç—Ä–∏—Ö–∫–æ–¥"],
              item["–¶–µ–Ω–∞"],
              item["–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å"],
              item["–ú–∞—Ä–∂–∞"],
              item["–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (%)"],
              item["–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö"],
              item["–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"],
              item["–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"]
            ]);
          });

          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
          const productsNumericColumns = [7, 8, 9, 10]; // –¶–µ–Ω–∞, –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å, –ú–∞—Ä–∂–∞, –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å
          productsNumericColumns.forEach(columnIndex => {
            const column = worksheet.getColumn(columnIndex);
            column.eachCell((cell, rowNumber) => {
              if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                cell.numFmt = '[$-419]# ##0,00;[$-419]-# ##0,00'; // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å –ª–æ–∫–∞–ª—å—é
              }
            });
          });

          console.log(`‚úÖ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - productsStartTime}ms —Å ${productsExcelData.length} –∑–∞–ø–∏—Å—è–º–∏`);
          
        } else {
          console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
          
          headers = [
            '–ê—Ä—Ç–∏–∫—É–ª –í–ë',
            '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
            '–ü—Ä–µ–¥–º–µ—Ç',
            '–ë—Ä–µ–Ω–¥',
            '–†–∞–∑–º–µ—Ä',
            '–®—Ç—Ä–∏—Ö–∫–æ–¥',
            '–¶–µ–Ω–∞',
            '–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å',
            '–ú–∞—Ä–∂–∞',
            '–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (%)',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö',
            '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
          ];

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          worksheet.addRow(headers);
          const emptyHeaderRow = worksheet.getRow(1);
          emptyHeaderRow.font = { bold: true };
          emptyHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };
          
          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = Math.max(header.length + 5, 15);
          });
        }
        break;

      case 'finances':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let financeTokenDoc;
        try {
          financeTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!financeTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –†–ö
        const { fetchCampaignSkus, fetchFinancialData } = await import('@/app/lib/finance-utils');

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö"...');
        const financeStartTime = Date.now();

        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±—É—Ñ–µ—Ä–Ω—ã–º–∏ –¥–Ω—è–º–∏ (—Å–æ–¥–µ—Ä–∂–∞—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–º–ø–∞–Ω–∏–π)
        const financialData = await fetchFinancialData(financeTokenDoc.apiKey, startDate, endDate);

        console.log(`üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö". –§–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${financialData.length}`);

        if (financialData.length > 0) {
          console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ '–§–∏–Ω–∞–Ω—Å—ã –†–ö'...");
          
          // –°–æ–±–∏—Ä–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏ –∏–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          const uniqueCampaigns = new Map();
          financialData.forEach(record => {
            if (!uniqueCampaigns.has(record.advertId)) {
              uniqueCampaigns.set(record.advertId, {
                advertId: record.advertId,
                name: record.campName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è'
              });
            }
          });
          
          console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞–º–ø–∞–Ω–∏–π: ${uniqueCampaigns.size}`);
          
          // –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –¥–ª—è —Å—Ç–æ–ª–±—Ü–∞ I
          const campaignsArray = Array.from(uniqueCampaigns.values());
          console.log(`üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–π...`);
          const skusMap = await fetchCampaignSkus(financeTokenDoc.apiKey, campaignsArray);
          console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤: ${skusMap.size} –∫–∞–º–ø–∞–Ω–∏–π`);
          
          // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö"
          const financeExcelData = financialData.map(record => {
            return {
              "ID –∫–∞–º–ø–∞–Ω–∏–∏": record.advertId,
              "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏": record.campName || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è',
              "–î–∞—Ç–∞": record.date,
              "–°—É–º–º–∞": record.sum,
              "–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è": record.bill === 1 ? '–°—á–µ—Ç' : '–ë–∞–ª–∞–Ω—Å',
              "–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏": record.type,
              "–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞": record.docNumber,
              "SKU ID": skusMap.get(record.advertId) || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
            };
          });

          headers = [
            'ID –∫–∞–º–ø–∞–Ω–∏–∏',
            '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
            '–î–∞—Ç–∞',
            '–°—É–º–º–∞',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
            '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
            '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞',
            'SKU ID',
            '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'
          ];

          fileName = `–§–∏–Ω–∞–Ω—Å—ã –†–ö - ${startDate}‚Äì${endDate}.xlsx`;

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
          worksheet.addRow(headers);

          // –°—Ç–∏–ª–∏–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
          const financesHeaderRow = worksheet.getRow(1);
          financesHeaderRow.font = { bold: true };
          financesHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };

          // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö"
          const financeColumnWidths = [
            { wch: 15 }, // ID –∫–∞–º–ø–∞–Ω–∏–∏
            { wch: 30 }, // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏
            { wch: 15 }, // –î–∞—Ç–∞
            { wch: 15 }, // –°—É–º–º–∞
            { wch: 20 }, // –ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è
            { wch: 15 }, // –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
            { wch: 20 }, // –ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞
            { wch: 40 }, // SKU ID (—à–∏—Ä–æ–∫–∏–π —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è —Å–ø–∏—Å–∫–∞ –∞—Ä—Ç–∏–∫—É–ª–æ–≤)
            { wch: 25 }  // –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
          ];
          
          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = financeColumnWidths[index]?.wch || Math.max(header.length + 5, 15);
          });

          // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
          const reportPeriod = `${new Date(startDate).toLocaleDateString('ru-RU')} - ${new Date(endDate).toLocaleDateString('ru-RU')}`;
          financeExcelData.forEach(item => {
            worksheet.addRow([
              item["ID –∫–∞–º–ø–∞–Ω–∏–∏"],
              item["–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏"],
              item["–î–∞—Ç–∞"],
              item["–°—É–º–º–∞"],
              item["–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è"],
              item["–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏"],
              item["–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞"],
              item["SKU ID"],
              reportPeriod
            ]);
          });

          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –†–ö –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
          const financeNumericColumns = [4]; // –°—É–º–º–∞
          financeNumericColumns.forEach(columnIndex => {
            const column = worksheet.getColumn(columnIndex);
            column.eachCell((cell, rowNumber) => {
              if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                cell.numFmt = '[$-419]# ##0,00;[$-419]-# ##0,00'; // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å –ª–æ–∫–∞–ª—å—é
              }
            });
          });

          console.log(`‚úÖ –õ–∏—Å—Ç "–§–∏–Ω–∞–Ω—Å—ã –†–ö" —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - financeStartTime}ms —Å ${financeExcelData.length} –∑–∞–ø–∏—Å—è–º–∏`);
          
        } else {
          console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ '–§–∏–Ω–∞–Ω—Å—ã –†–ö' - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
          
          headers = [
            'ID –∫–∞–º–ø–∞–Ω–∏–∏',
            '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
            '–î–∞—Ç–∞',
            '–°—É–º–º–∞',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
            '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
            '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞',
            'SKU ID',
            '–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞'
          ];

          fileName = `–§–∏–Ω–∞–Ω—Å—ã –†–ö - ${startDate}‚Äì${endDate}.xlsx`;

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          worksheet.addRow(headers);
          const emptyHeaderRow = worksheet.getRow(1);
          emptyHeaderRow.font = { bold: true };
          emptyHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };
          
          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = Math.max(header.length + 5, 15);
          });
        }
        break;

      case 'acceptance':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let acceptanceTokenDoc;
        try {
          acceptanceTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!acceptanceTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('ÔøΩÔøΩ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏...');
        const acceptanceStart = Date.now();
        fileName = `–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏—ë–º–∫–∞ - ${startDate}‚Äì${endDate}.xlsx`;

        try {
          // 1. –°–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á—É –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
          const createUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report?dateFrom=${startDate}&dateTo=${endDate}`;
          const createResp = await fetch(createUrl, {
            method: 'GET',
            headers: { Authorization: acceptanceTokenDoc.apiKey }
          });
          if (!createResp.ok) throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: ${createResp.status}`);
          const { data: { taskId } = { taskId: null } } = await createResp.json();
          if (!taskId) throw new Error('taskId –Ω–µ –ø–æ–ª—É—á–µ–Ω');
          console.log(`üìã –ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞: ${taskId}`);

          // 2. –û–∂–∏–¥–∞–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
          let ready = false; let attempts = 0;
          while (!ready && attempts < 30) {
            attempts++;
            const statusUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report/tasks/${taskId}/status`;
            const st = await fetch(statusUrl, { headers: { Authorization: acceptanceTokenDoc.apiKey } });
            if (st.ok) {
              const stData = await st.json();
              const status = stData.data?.status;
              console.log(`üîÑ –°—Ç–∞—Ç—É—Å: ${status}`);
              if (status === 'done') { ready = true; break; }
              if (status === 'error') throw new Error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ WB');
            }
            if (!ready) await new Promise(r => setTimeout(r, 5000));
          }
          if (!ready) throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç—á—ë—Ç–∞');

          // 3. –°–∫–∞—á–∏–≤–∞–µ–º –æ—Ç—á—ë—Ç
          const dlUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report/tasks/${taskId}/download`;
          const dlResp = await fetch(dlUrl, { headers: { Authorization: acceptanceTokenDoc.apiKey } });
          if (!dlResp.ok) throw new Error(`–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: ${dlResp.status}`);
          const accData = await dlResp.json();
          console.log(`üì¶ –ó–∞–ø–∏—Å–µ–π –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏: ${accData.length}`);

          if (Array.isArray(accData) && accData.length) {
            headers = [
              '–ö–æ–ª-–≤–æ',
              '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI',
              'Income ID',
              '–ê—Ä—Ç–∏–∫—É–ª WB',
              '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö',
              '–ü—Ä–µ–¥–º–µ—Ç',
              '–°—É–º–º–∞ (—Ä—É–±)',
              '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞'
            ];
            worksheet.addRow(headers);
            const hr = worksheet.getRow(1);
            hr.font = { bold: true };
            hr.fill = { type: 'pattern', pattern: 'solid', fgColor: { argb: 'FFE0E0E0' } };

            const periodStr = `${new Date(startDate).toLocaleDateString('ru-RU')} - ${new Date(endDate).toLocaleDateString('ru-RU')}`;

            accData.forEach((item: { count?: number; giCreateDate?: string; incomeId?: number; nmID?: number; shkCreateDate?: string; subjectName?: string; total?: number; }) => {
              worksheet.addRow([
                item.count || 0,
                item.giCreateDate ? new Date(item.giCreateDate).toLocaleDateString('ru-RU') : '',
                item.incomeId || '',
                item.nmID || '',
                item.shkCreateDate ? new Date(item.shkCreateDate).toLocaleDateString('ru-RU') : '',
                item.subjectName || '',
                item.total || 0,
                periodStr
              ]);
            });

            // —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–æ–≤—ã—Ö —Å—Ç–æ–ª–±—Ü–æ–≤
            [1,7].forEach(col => {
              const c = worksheet.getColumn(col);
              c.eachCell((cell, row) => { if (row>1) { cell.numFmt='[$-419]# ##0,00'; cell.value=Number(cell.value)||0;} });
            });

            headers.forEach((h,i)=>{ worksheet.getColumn(i+1).width=Math.max(h.length+5,15); });
          } else {
            headers = ['–ö–æ–ª-–≤–æ','–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è GI','Income ID','–ê—Ä—Ç–∏–∫—É–ª WB','–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –®–ö','–ü—Ä–µ–¥–º–µ—Ç','–°—É–º–º–∞ (—Ä—É–±)','–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞'];
            worksheet.addRow(headers);
            worksheet.getCell('A1').font={bold:true};
          }
          console.log(`‚úÖ –û—Ç—á—ë—Ç –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏ –≥–æ—Ç–æ–≤ –∑–∞ ${Date.now()-acceptanceStart}ms`);
        } catch(err: unknown) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏:', err);
          const message = err instanceof Error ? err.message : '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
          return NextResponse.json({ error: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏: ${message}` }, { status: 500 });
        }
        break;

      case 'storage':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let storageTokenDoc;
        try {
          storageTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!storageTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è...');
        const storageStartTime = Date.now();

        fileName = `–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ - ${startDate}‚Äì${endDate}.xlsx`;

        try {
          // –®–∞–≥ 1: –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞–Ω–∏–µ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞
          console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç—á–µ—Ç–∞ –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è...');
          const createTaskUrl = `https://seller-analytics-api.wildberries.ru/api/v1/paid_storage?dateFrom=${startDate}&dateTo=${endDate}`;
          
          const createTaskResponse = await fetch(createTaskUrl, {
            method: 'GET',
            headers: {
              'Authorization': storageTokenDoc.apiKey,
              'Content-Type': 'application/json'
            }
          });

          if (!createTaskResponse.ok) {
            if (createTaskResponse.status === 401) {
              throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π API —Ç–æ–∫–µ–Ω');
            }
            throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è: ${createTaskResponse.status}`);
          }

          const taskResponse = await createTaskResponse.json();
          const taskId = taskResponse.data?.taskId;
          
          if (!taskId) {
            throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω ID –∑–∞–¥–∞–Ω–∏—è');
          }

          console.log(`üìã –ó–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ —Å ID: ${taskId}`);

          // –®–∞–≥ 2: –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞ (–ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å)
          console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –æ—Ç—á–µ—Ç–∞...');
          let attempts = 0;
          const maxAttempts = 30; // 30 –ø–æ–ø—ã—Ç–æ–∫ –ø–æ 5 —Å–µ–∫—É–Ω–¥ = 2.5 –º–∏–Ω—É—Ç—ã –º–∞–∫—Å–∏–º—É–º
          let isReady = false;

          while (!isReady && attempts < maxAttempts) {
            attempts++;
            console.log(`üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞, –ø–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}...`);
            
            const statusUrl = `https://seller-analytics-api.wildberries.ru/api/v1/paid_storage/tasks/${taskId}/status`;
            const statusResponse = await fetch(statusUrl, {
              method: 'GET',
              headers: {
                'Authorization': storageTokenDoc.apiKey,
                'Content-Type': 'application/json'
              }
            });

            if (statusResponse.ok) {
              const statusData = await statusResponse.json();
              console.log(`üìä –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞–Ω–∏—è: ${statusData.data?.status}`);
              
              if (statusData.data?.status === 'done') {
                isReady = true;
                break;
              } else if (statusData.data?.status === 'error') {
                throw new Error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ WB');
              }
            }

            if (!isReady && attempts < maxAttempts) {
              await new Promise(resolve => setTimeout(resolve, 5000)); // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥
            }
          }

          if (!isReady) {
            throw new Error('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ (2.5 –º–∏–Ω—É—Ç—ã)');
          }

          // –®–∞–≥ 3: –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç
          console.log('üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞...');
          const downloadUrl = `https://seller-analytics-api.wildberries.ru/api/v1/paid_storage/tasks/${taskId}/download`;
          const downloadResponse = await fetch(downloadUrl, {
            method: 'GET',
            headers: {
              'Authorization': storageTokenDoc.apiKey,
              'Content-Type': 'application/json'
            }
          });

          if (!downloadResponse.ok) {
            throw new Error(`–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞: ${downloadResponse.status}`);
          }

          const storageData = await downloadResponse.json();
          console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${storageData.length || 0}`);

          if (storageData && storageData.length > 0) {
            headers = [
              '–î–∞—Ç–∞',
              '–ê—Ä—Ç–∏–∫—É–ª WB',
              '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–ü—Ä–µ–¥–º–µ—Ç',
              '–ë—Ä–µ–Ω–¥',
              '–†–∞–∑–º–µ—Ä',
              '–û–±—ä–µ–º (–ª)',
              '–°–∫–ª–∞–¥',
              '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞',
              '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è (—Ä—É–±)',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤',
              '–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞'
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            worksheet.addRow(headers);
            const headerRow = worksheet.getRow(1);
            headerRow.font = { bold: true };
            headerRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };

            // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ–≥–ª–∞—Å–Ω–æ –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ API
            storageData.forEach((item: {
              date?: string;
              nmId?: number;
              vendorCode?: string;
              subject?: string;
              brand?: string;
              size?: string;
              volume?: number;
              warehouse?: string;
              warehouseCoef?: number;
              logWarehouseCoef?: number;
              warehousePrice?: number;
              barcodesCount?: number;
              calcType?: string;
            }) => {
              worksheet.addRow([
                item.date ? new Date(item.date).toLocaleDateString('ru-RU') : '',
                item.nmId || '',
                item.vendorCode || '',
                item.subject || '',
                item.brand || '',
                item.size || '',
                item.volume || 0,
                item.warehouse || '',
                item.warehouseCoef || 0,
                item.logWarehouseCoef || 0,
                item.warehousePrice || 0,
                item.barcodesCount || 0,
                item.calcType || ''
              ]);
            });

            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            const numericColumns = [7, 9, 10, 11, 12]; // –û–±—ä–µ–º, –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã, –°—Ç–æ–∏–º–æ—Å—Ç—å, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ
            numericColumns.forEach(columnIndex => {
              const column = worksheet.getColumn(columnIndex);
              column.eachCell((cell, rowNumber) => {
                if (rowNumber > 1) {
                  cell.numFmt = '[$-419]# ##0,00';
                  cell.value = Number(cell.value) || 0;
                }
              });
            });

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = Math.max(header.length + 5, 15);
            });

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü "–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞" –≤ O1
            console.log("üìù –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞' –≤ O...");
            worksheet.getCell('O1').value = '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞';
            
            // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞ –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω—ã—Ö
            for (let rowIndex = 2; rowIndex <= storageData.length + 1; rowIndex++) {
              const cell = worksheet.getCell(`O${rowIndex}`);
              cell.value = `${new Date(startDate).toLocaleDateString('ru-RU')} - ${new Date(endDate).toLocaleDateString('ru-RU')}`;
            }
          } else {
            // –ü—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω
            headers = [
              '–î–∞—Ç–∞',
              '–ê—Ä—Ç–∏–∫—É–ª WB',
              '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–ü—Ä–µ–¥–º–µ—Ç',
              '–ë—Ä–µ–Ω–¥',
              '–†–∞–∑–º–µ—Ä',
              '–û–±—ä–µ–º (–ª)',
              '–°–∫–ª–∞–¥',
              '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞',
              '–õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å —Ö—Ä–∞–Ω–µ–Ω–∏—è (—Ä—É–±)',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤',
              '–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞'
            ];

            worksheet.addRow(headers);
            const emptyHeaderRow = worksheet.getRow(1);
            emptyHeaderRow.font = { bold: true };
            emptyHeaderRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };

            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = Math.max(header.length + 5, 15);
            });

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü "–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞" –≤ O1 –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            worksheet.getCell('O1').value = '–î–∞—Ç–∞ –æ—Ç—á–µ—Ç–∞';
          }

          console.log(`‚úÖ –û—Ç—á–µ—Ç –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - storageStartTime}ms`);
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
          return NextResponse.json({ 
            error: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
          }, { status: 500 });
        }
        break;

      default:
        return NextResponse.json({ error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ—Ç—á—ë—Ç–∞' }, { status: 400 });
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±—É—Ñ–µ—Ä
    const buffer = await workbook.xlsx.writeBuffer();

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∞–π–ª
    return new NextResponse(buffer, {
      headers: {
        'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        'Content-Disposition': `attachment; filename="${encodeURIComponent(fileName)}"`,
      },
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞:', error);
    return NextResponse.json(
      { error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞' },
      { status: 500 }
    );
  }
} 