import { NextRequest, NextResponse } from 'next/server';
import ExcelJS from 'exceljs';
import connectToDatabase from '@/app/lib/mongodb';
import Token from '@/app/lib/models/Token';
import { getStorageData, StorageItem } from '@/app/lib/storage-utils';



interface AcceptanceReportItem {
  giCreateDate: string;      // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏
  incomeId: number;          // –ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏
  nmID: number;              // –ê—Ä—Ç–∏–∫—É–ª Wildberries
  shkCreateDate: string;     // –î–∞—Ç–∞ –ø—Ä–∏—ë–º–∫–∏
  subjectName: string;       // –ü—Ä–µ–¥–º–µ—Ç (–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)
  count: number;             // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤, —à—Ç.
  total: number;             // –°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏—ë–º–∫–∏, ‚ÇΩ
}

async function fetchAcceptanceReport(apiKey: string, dateFrom: string, dateTo: string): Promise<AcceptanceReportItem[]> {
  // –î–µ—Ç–∞–ª—å–Ω–æ–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  const isProblematicPeriod = dateFrom.includes('2025-06-16') || dateFrom.includes('16.06.2025') || dateFrom.includes('2025-06-22');
  
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–õ–ê–¢–ù–û–ô –ü–†–ò–ï–ú–ö–ò:');
  console.log(`   üìÖ –ü–µ—Ä–∏–æ–¥: ${dateFrom} ‚Üí ${dateTo}`);
  console.log(`   üîë –¢–æ–∫–µ–Ω (–ø–µ—Ä–≤—ã–µ 20 —Å–∏–º–≤–æ–ª–æ–≤): ${apiKey.substring(0, 20)}...`);
  console.log(`   ‚ö†Ô∏è  –ü—Ä–æ–±–ª–µ–º–Ω—ã–π –ø–µ—Ä–∏–æ–¥ (16-22 –∏—é–Ω—è): ${isProblematicPeriod}`);
  console.log(`   üìä –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: ${new Date().toISOString()}`);
  console.log(`   üåç –õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}`);
  
  try {
    // –ü—Ä–æ–±—É–µ–º –Ω–æ–≤—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API
    console.log('üîÑ –≠–¢–ê–ü 1: –ü–æ–ø—ã—Ç–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ API...');
    
    // 1. –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É (GET –∑–∞–ø—Ä–æ—Å —Å query –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏)
    const createUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report?dateFrom=${dateFrom}&dateTo=${dateTo}`;
    console.log(`   üåê URL —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: ${createUrl}`);
    
    // –ü–æ–≤—Ç–æ—Ä—è–µ–º –∑–∞–ø—Ä–æ—Å —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏, –µ—Å–ª–∏ –ø–æ–ª—É—á–∞–µ–º 429 Too Many Requests
    const maxCreateAttempts = 7; // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–æ–≤
    let createAttempt = 0;
    let createResponse: any = null;

    while (createAttempt < maxCreateAttempts) {
      createAttempt++;
      console.log(`   üöÄ –ü–æ–ø—ã—Ç–∫–∞ ${createAttempt}/${maxCreateAttempts} —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏—ë–º–∫–∏`);

      createResponse = await fetch(createUrl, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${apiKey}`,
          'Content-Type': 'application/json'
        }
      });

      console.log(`   üì° –û—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: ${createResponse.status} ${createResponse.statusText}`);
      console.log('   üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', Object.fromEntries(createResponse.headers.entries()));

      // –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç ‚Äì –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
      if (createResponse.ok) {
        break;
      }

      // –û—Ç–≤–µ—Ç 429 ‚Äì –∂–¥—ë–º –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º
      if (createResponse.status === 429) {
        const retryAfterHeader = createResponse.headers.get('Retry-After');
        const retryAfterSeconds = retryAfterHeader ? parseInt(retryAfterHeader, 10) : 20; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é 20 —Å
        const waitMs = (retryAfterSeconds + 5) * 1000; // –Ω–µ–±–æ–ª—å—à–æ–π ¬´–¥–∂–∏—Ç—Ç–µ—Ä¬ª 5 —Å
        console.log(`   ‚è≥ –ü–æ–ª—É—á–µ–Ω 429. –ñ–¥—ë–º ${waitMs / 1000}s –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π...`);
        await new Promise(r => setTimeout(r, waitMs));
        continue;
      }

      // –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫ ‚Äì –∑–∞–≤–µ—Ä—à–∞–µ–º
      const errorText = await createResponse.text();
      console.log(`   ‚ùå –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—à–∏–±–∫–∏: ${errorText}`);
      throw new Error(`–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${createResponse.status} ${createResponse.statusText}. –û—Ç–≤–µ—Ç: ${errorText}`);
    }

    if (!createResponse || !createResponse.ok) {
      const errorText = createResponse ? await createResponse.text() : '–Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞';
      throw new Error(`–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ—Å–ª–µ ${maxCreateAttempts} –ø–æ–ø—ã—Ç–æ–∫. –û—Ç–≤–µ—Ç: ${errorText}`);
    }

    const createData = await createResponse.json();
    console.log(`   üìã –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏:`, JSON.stringify(createData, null, 2));
    
    const taskId = createData.data?.taskId;
    
    if (!taskId) {
      console.log(`   ‚ùå TaskId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ—Ç–≤–µ—Ç–µ. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:`, createData);
      throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω taskId –æ—Ç API');
    }
    
    console.log(`üìã –≠–¢–ê–ü 2: –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏: ${taskId}`);

    // 2. –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ (—Å —Ç–∞–π–º–∞—É—Ç–æ–º)
    let status = 'processing';
    let attempts = 0;
    const maxAttempts = isProblematicPeriod ? 24 : 72; // –°–æ–∫—Ä–∞—â–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –ø—Ä–æ–±–ª–µ–º–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ (2 –º–∏–Ω—É—Ç—ã –≤–º–µ—Å—Ç–æ 6)
    
    console.log(`‚è∞ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: ${maxAttempts}`);

    while (status !== 'done' && attempts < maxAttempts) {
      await new Promise(resolve => setTimeout(resolve, 5000)); // –∂–¥–µ–º 5 —Å–µ–∫ (—Å–æ–≥–ª–∞—Å–Ω–æ –ª–∏–º–∏—Ç–∞–º API)
      
      const statusUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report/tasks/${taskId}/status`;
      console.log(`   üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ (–ø–æ–ø—ã—Ç–∫–∞ ${attempts + 1}): ${statusUrl}`);
      
      const statusResponse = await fetch(statusUrl, { 
        headers: { 'Authorization': `Bearer ${apiKey}` },
        method: 'GET'
      });

      console.log(`   üì° –û—Ç–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞: ${statusResponse.status} ${statusResponse.statusText}`);

      if (!statusResponse.ok) {
        const statusErrorText = await statusResponse.text();
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: ${statusErrorText}`);
        throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: ${statusResponse.status}. –û—Ç–≤–µ—Ç: ${statusErrorText}`);
      }

      const statusData = await statusResponse.json();
      console.log(`   üìä –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–∞:`, JSON.stringify(statusData, null, 2));
      
      status = statusData.data?.status || 'unknown';
      attempts++;

      console.log(`‚è≥ –ü–æ–ø—ã—Ç–∫–∞ ${attempts}: —Å—Ç–∞—Ç—É—Å = ${status}`);
      
      if (status === 'done') {
        break;
      }
      
      if (status === 'error' || status === 'failed') {
        console.log(`   ‚ùå –ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: ${status}`);
        console.log(`   üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ –≤ —Å—Ç–∞—Ç—É—Å–µ:`, statusData);
        throw new Error(`–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: ${status}. –î–µ—Ç–∞–ª–∏: ${JSON.stringify(statusData)}`);
      }
    }

    if (status !== 'done') {
      console.log(`   ‚è∞ –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è. –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${status}, –ø–æ–ø—ã—Ç–æ–∫: ${attempts}`);
      throw new Error(`–¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏. –ü–æ—Å–ª–µ–¥–Ω–∏–π —Å—Ç–∞—Ç—É—Å: ${status}, –ø–æ–ø—ã—Ç–æ–∫: ${attempts}`);
    }

    // 3. –ó–∞–≥—Ä—É–∂–∞–µ–º –≥–æ—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üì• –≠–¢–ê–ü 3: –ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    const downloadUrl = `https://seller-analytics-api.wildberries.ru/api/v1/acceptance_report/tasks/${taskId}/download`;
    console.log(`   üåê URL –∑–∞–≥—Ä—É–∑–∫–∏: ${downloadUrl}`);
    
    const downloadResponse = await fetch(downloadUrl, { 
      headers: { 'Authorization': `Bearer ${apiKey}` },
      method: 'GET'
    });

    console.log(`   üì° –û—Ç–≤–µ—Ç –∑–∞–≥—Ä—É–∑–∫–∏: ${downloadResponse.status} ${downloadResponse.statusText}`);

    if (!downloadResponse.ok) {
      const downloadErrorText = await downloadResponse.text();
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${downloadErrorText}`);
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ${downloadResponse.status}. –û—Ç–≤–µ—Ç: ${downloadErrorText}`);
    }

    const downloadData = await downloadResponse.json();
    console.log(`   üìä –†–∞–∑–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö: ${JSON.stringify(downloadData).length} —Å–∏–º–≤–æ–ª–æ–≤`);
    console.log(`   üìã –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö: ${typeof downloadData}, —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º: ${Array.isArray(downloadData)}`);
    
    if (downloadData && Array.isArray(downloadData) && downloadData.length > 0) {
      console.log(`   üìÑ –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å:`, JSON.stringify(downloadData[0], null, 2));
    }
    
    if (!downloadData || !Array.isArray(downloadData)) {
      console.log('‚ö†Ô∏è –ù–æ–≤—ã–π API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ, –¥–∞–Ω–Ω—ã—Ö –∑–∞ —ç—Ç–æ—Ç –ø–µ—Ä–∏–æ–¥ –Ω–µ—Ç');
      return [];
    }

    console.log(`‚úÖ –£–°–ü–ï–•: –ù–æ–≤—ã–π –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª ${downloadData.length} –∑–∞–ø–∏—Å–µ–π`);
    return downloadData;
    
  } catch (asyncError) {
    console.log(`‚ùå –≠–¢–ê–ü 4: –û—à–∏–±–∫–∞ –Ω–æ–≤–æ–≥–æ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ API: ${asyncError}`);
    console.log(`   üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:`, asyncError);
    
    // Fallback: –ø—Ä–æ–±—É–µ–º —Å—Ç–∞—Ä—ã–π —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API
    try {
      console.log('üîÑ –≠–¢–ê–ü 5: –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Å—Ç–∞—Ä—ã–π —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π API...');
      
      const fallbackUrl = `https://seller-analytics-api.wildberries.ru/api/v1/analytics/acceptance-report?dateFrom=${dateFrom}&dateTo=${dateTo}`;
      console.log(`   üåê URL —Å—Ç–∞—Ä–æ–≥–æ API: ${fallbackUrl}`);
      
      const fallbackResponse = await fetch(fallbackUrl, {
        method: 'GET',
        headers: {
          'Authorization': apiKey, // –°—Ç–∞—Ä—ã–π API –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω –±–µ–∑ Bearer
          'Content-Type': 'application/json'
        }
      });

      console.log(`   üì° –û—Ç–≤–µ—Ç —Å—Ç–∞—Ä–æ–≥–æ API: ${fallbackResponse.status} ${fallbackResponse.statusText}`);
      console.log(`   üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ —Å—Ç–∞—Ä–æ–≥–æ API:`, Object.fromEntries(fallbackResponse.headers.entries()));

      if (!fallbackResponse.ok) {
        const fallbackErrorText = await fallbackResponse.text();
        console.log(`   ‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ API: ${fallbackErrorText}`);
        throw new Error(`–°—Ç–∞—Ä—ã–π API —Ç–æ–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${fallbackResponse.status} ${fallbackResponse.statusText}. –û—Ç–≤–µ—Ç: ${fallbackErrorText}`);
      }

      const fallbackData = await fallbackResponse.json();
      console.log(`   üìä –†–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö —Å—Ç–∞—Ä–æ–≥–æ API: ${JSON.stringify(fallbackData).length} —Å–∏–º–≤–æ–ª–æ–≤`);
      console.log(`   üìã –¢–∏–ø –¥–∞–Ω–Ω—ã—Ö: ${typeof fallbackData}, —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º: ${Array.isArray(fallbackData)}`);
      console.log(`   üìÑ –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å—Ç–∞—Ä–æ–≥–æ API:`, JSON.stringify(fallbackData, null, 2));
      
      const processedData = fallbackData.report || fallbackData || [];
      
      if (!processedData || !Array.isArray(processedData)) {
        console.log('‚ö†Ô∏è –°—Ç–∞—Ä—ã–π API —Ç–æ–∂–µ –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç—ã–µ –¥–∞–Ω–Ω—ã–µ');
        return [];
      }

      console.log(`‚úÖ –£–°–ü–ï–•: –°—Ç–∞—Ä—ã–π API —É—Å–ø–µ—à–Ω–æ –≤–µ—Ä–Ω—É–ª ${processedData.length} –∑–∞–ø–∏—Å–µ–π`);
      return processedData;

    } catch (oldApiError) {
      console.log(`‚ùå –§–ò–ù–ê–õ: –ò —Å—Ç–∞—Ä—ã–π API —Ç–æ–∂–µ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${oldApiError}`);
      console.log(`   üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ —Å—Ç–∞—Ä–æ–≥–æ API:`, oldApiError);
      throw new Error(`–û–±–∞ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –ù–æ–≤—ã–π: ${asyncError}. –°—Ç–∞—Ä—ã–π: ${oldApiError}`);
    }
  }
}



export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    const { reportType, startDate, endDate, tokenId } = body;

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ä–∞–±–æ—á—É—é –∫–Ω–∏–≥—É
    const workbook = new ExcelJS.Workbook();
    const worksheet = workbook.addWorksheet('–û—Ç—á—ë—Ç');

    let headers: string[] = [];
    let fileName = '';

    switch (reportType) {
      case 'details':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let detailsTokenDoc;
        try {
          detailsTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!detailsTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏...');
        const detailsStartTime = Date.now();

        fileName = `–û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ - ${startDate}‚Äì${endDate}.xlsx`;

        try {
          // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π
          const { fetchRealizationData, addDetailedRealizationToWorkbook } = await import('@/app/lib/realization-utils');

          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
          const realizationData = await fetchRealizationData(detailsTokenDoc.apiKey, startDate, endDate);

          console.log(`üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏. –ó–∞–ø–∏—Å–µ–π: ${realizationData.length}`);

          // –õ–∏—Å—Ç —Å–æ–∑–¥–∞–µ—Ç—Å—è –¢–û–õ–¨–ö–û –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏
          console.log(`üìä –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ "–ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç". –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${realizationData?.length || 0}`);

          if (realizationData && realizationData.length > 0) {
            console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Å –¥–∞–Ω–Ω—ã–º–∏...");
            
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ workbook
            addDetailedRealizationToWorkbook(workbook, realizationData);

            console.log(`‚úÖ –û—Ç—á–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - detailsStartTime}ms —Å ${realizationData.length} –∑–∞–ø–∏—Å—è–º–∏`);
            
          } else {
            // –õ–∏—Å—Ç –ù–ï –°–û–ó–î–ê–ï–¢–°–Ø, –µ—Å–ª–∏ data –ø—É—Å—Ç–æ–π!
            console.log("‚ö†Ô∏è –õ–∏—Å—Ç '–ü–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç' –Ω–µ —Å–æ–∑–¥–∞–Ω - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏");
            console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
            
            // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö
            headers = [
              'ID —Å—Ç—Ä–æ–∫–∏ –æ—Ç—á–µ—Ç–∞',
              'ID –æ—Ç—á–µ—Ç–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏', 
              '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞',
              '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è',
              '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
              '–í–∞–ª—é—Ç–∞',
              '–ö–æ–¥ –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–î–∞—Ç–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏',
              'ID –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ü—Ä–µ–¥–º–µ—Ç',
              '–ê—Ä—Ç–∏–∫—É–ª WB',
              '–ë—Ä–µ–Ω–¥',
              '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–†–∞–∑–º–µ—Ä',
              '–®—Ç—Ä–∏—Ö–∫–æ–¥',
              '–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è',
              '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂',
              '–°–∫–∏–¥–∫–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞ %',
              '–ö–æ–º–∏—Å—Å–∏—è %',
              '–°–∫–ª–∞–¥',
              '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
              '–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞',
              '–î–∞—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏',
              '–®–ö',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏',
              '–°—É–º–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏',
              '–°—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏',
              '–¢–∏–ø –∫–æ—Ä–æ–±–∫–∏',
              '–°–∫–∏–¥–∫–∞ —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞',
              '–ü—Ä–æ–º–æ –ø—Ä–æ–¥–∞–≤—Ü–∞',
              '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–°–ü–ü %',
              '–ö–í –±–µ–∑ –ù–î–° %',
              '–ö–í %',
              '–î–æ–ø–ª–∞—Ç–∞',
              '–ö–ì–í–ü–≤2',
              '–ö–æ–º–∏—Å—Å–∏—è –ø—Ä–æ–¥–∞–∂',
              '–ö –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏—é –ø—Ä–æ–¥–∞–≤—Ü—É',
              '–í–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ —Å –ø—Ä–æ–¥–∞–∂',
              '–≠–∫–≤–∞–π—Ä–∏–Ω–≥',
              '–ë–∞–Ω–∫ —ç–∫–≤–∞–π—Ä–∏–Ω–≥–∞',
              '–õ–æ–≥–∏—Å—Ç–∏–∫–∞',
              '–ù–î–° —Å –ª–æ–≥–∏—Å—Ç–∏–∫–∏',
              'ID –æ—Ñ–∏—Å–∞',
              '–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ñ–∏—Å–∞',
              'ID –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–ò–ù–ù',
              '–ù–æ–º–µ—Ä –¥–µ–∫–ª–∞—Ä–∞—Ü–∏–∏',
              '–¢–∏–ø –±–æ–Ω—É—Å–∞',
              'ID —Å—Ç–∏–∫–µ—Ä–∞',
              '–°—Ç—Ä–∞–Ω–∞',
              '–®—Ç—Ä–∞—Ñ—ã',
              '–î–æ–ø–ª–∞—Ç—ã',
              'SRID'
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            worksheet.addRow(headers);
            const emptyHeaderRow = worksheet.getRow(1);
            emptyHeaderRow.font = { bold: true };
            emptyHeaderRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };
            
            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = Math.max(header.length / 2, 8);
            });
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –ª—É—á—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
          if (error instanceof Error && error.message.includes('API_ENDPOINT_NOT_FOUND')) {
            console.log('üîß –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø—Ä–æ–±–ª–µ–º–∞ —Å endpoint API - –≤–æ–∑–º–æ–∂–Ω–æ, API Wildberries –∏–∑–º–µ–Ω–∏–ª—Å—è');
            console.log('üìû –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Wildberries API –∏–ª–∏ –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É');
            console.log('üîÑ –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏');

            // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω –ø—Ä–∏ –æ—à–∏–±–∫–µ API
            headers = [
              'ID —Å—Ç—Ä–æ–∫–∏ –æ—Ç—á–µ—Ç–∞',
              'ID –æ—Ç—á–µ—Ç–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏', 
              '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞',
              '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è',
              '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
              '–í–∞–ª—é—Ç–∞',
              '–ö–æ–¥ –¥–æ–≥–æ–≤–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–î–∞—Ç–∞ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏',
              'ID –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ü—Ä–µ–¥–º–µ—Ç',
              '–ê—Ä—Ç–∏–∫—É–ª WB',
              '–ë—Ä–µ–Ω–¥',
              '–ê—Ä—Ç–∏–∫—É–ª –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞',
              '–†–∞–∑–º–µ—Ä',
              '–®—Ç—Ä–∏—Ö–∫–æ–¥',
              '–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è',
              '–°—É–º–º–∞ –ø—Ä–æ–¥–∞–∂',
              '–°–∫–∏–¥–∫–∞ –ø—Ä–æ–¥–∞–≤—Ü–∞ %',
              '–ö–æ–º–∏—Å—Å–∏—è %',
              '–°–∫–ª–∞–¥',
              '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
              '–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞',
              '–î–∞—Ç–∞ –ø—Ä–æ–¥–∞–∂–∏',
              '–®–ö',
              '–¶–µ–Ω–∞ —Ä–æ–∑–Ω–∏—á–Ω–∞—è —Å —É—á–µ—Ç–æ–º —Å–∫–∏–¥–∫–∏',
              '–°—É–º–º–∞ –¥–æ—Å—Ç–∞–≤–∫–∏',
              '–°—É–º–º–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞',
              '–°—Ç–æ–∏–º–æ—Å—Ç—å –ª–æ–≥–∏—Å—Ç–∏–∫–∏'
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            worksheet.addRow(headers);
            const emptyHeaderRow = worksheet.getRow(1);
            emptyHeaderRow.font = { bold: true };
            emptyHeaderRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };
            
            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = Math.max(header.length / 2, 8);
            });
            
            fileName = `–®–∞–±–ª–æ–Ω –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ - ${startDate}‚Äì${endDate}.xlsx`;
          } else {
            console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏');
            return NextResponse.json({ 
              error: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
            }, { status: 500 });
          }
        }
        break;

      case 'storage':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let storageTokenDoc;
        try {
          storageTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!storageTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ "–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ"...');
        const storageStartTime = Date.now();

        let storageData: any[] = [];
        try {
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–Ω–æ–º —Ö—Ä–∞–Ω–µ–Ω–∏–∏
          storageData = await getStorageData(storageTokenDoc.apiKey, startDate, endDate);
          console.log(`üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞ "–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ". –ó–∞–ø–∏—Å–µ–π: ${storageData.length}`);
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
          // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          storageData = [];
        }

        fileName = `–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ - ${startDate}‚Äì${endDate}.xlsx`;

        if (storageData && storageData.length > 0) {
          console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ '–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ' —Å –¥–∞–Ω–Ω—ã–º–∏...");
          
          // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
          const storageExcelData = storageData.map((item: StorageItem) => ({
            "–î–∞—Ç–∞": item.date || "",
            "–°–∫–ª–∞–¥": item.warehouse || "",
            "–ê—Ä—Ç–∏–∫—É–ª Wildberries": item.nmId || "",
            "–†–∞–∑–º–µ—Ä": item.size || "",
            "–ë–∞—Ä–∫–æ–¥": item.barcode || "",
            "–ü—Ä–µ–¥–º–µ—Ç": item.subject || "",
            "–ë—Ä–µ–Ω–¥": item.brand || "",
            "–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞": item.vendorCode || "",
            "–û–±—ä–µ–º (–¥–º¬≥)": item.volume || 0,
            "–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞": item.calcType || "",
            "–°—É–º–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è": item.warehousePrice || 0,
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤": item.barcodesCount || 0,
            "–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞": item.warehouseCoef || 0,
            "–°–∫–∏–¥–∫–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ (%)": item.loyaltyDiscount || 0,
            "–î–∞—Ç–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞": item.tariffFixDate || "",
            "–î–∞—Ç–∞ —Å–Ω–∏–∂–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞": item.tariffLowerDate || "",
          }));

          headers = [
            '–î–∞—Ç–∞',
            '–°–∫–ª–∞–¥',
            '–ê—Ä—Ç–∏–∫—É–ª Wildberries',
            '–†–∞–∑–º–µ—Ä',
            '–ë–∞—Ä–∫–æ–¥',
            '–ü—Ä–µ–¥–º–µ—Ç',
            '–ë—Ä–µ–Ω–¥',
            '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
            '–û–±—ä–µ–º (–¥–º¬≥)',
            '–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞',
            '–°—É–º–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è',
            '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤',
            '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞',
            '–°–∫–∏–¥–∫–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ (%)',
            '–î–∞—Ç–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞',
            '–î–∞—Ç–∞ —Å–Ω–∏–∂–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞'
          ];

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
          worksheet.addRow(headers);
          const storageHeaderRow = worksheet.getRow(1);
          storageHeaderRow.font = { bold: true };
          storageHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };

          // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
          const storageColumnWidths = [
            { wch: 12 }, // –î–∞—Ç–∞
            { wch: 15 }, // –°–∫–ª–∞–¥
            { wch: 20 }, // –ê—Ä—Ç–∏–∫—É–ª Wildberries
            { wch: 10 }, // –†–∞–∑–º–µ—Ä
            { wch: 15 }, // –ë–∞—Ä–∫–æ–¥
            { wch: 25 }, // –ü—Ä–µ–¥–º–µ—Ç
            { wch: 15 }, // –ë—Ä–µ–Ω–¥
            { wch: 15 }, // –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞
            { wch: 12 }, // –û–±—ä–µ–º
            { wch: 20 }, // –¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞
            { wch: 15 }, // –°—É–º–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è
            { wch: 12 }, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤
            { wch: 12 }, // –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞
            { wch: 15 }, // –°–∫–∏–¥–∫–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
            { wch: 15 }, // –î–∞—Ç–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞
            { wch: 15 }, // –î–∞—Ç–∞ —Å–Ω–∏–∂–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞
          ];

          storageColumnWidths.forEach((width, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = width.wch;
          });

          // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
          storageExcelData.forEach(item => {
            worksheet.addRow([
              item["–î–∞—Ç–∞"],
              item["–°–∫–ª–∞–¥"],
              item["–ê—Ä—Ç–∏–∫—É–ª Wildberries"],
              item["–†–∞–∑–º–µ—Ä"],
              item["–ë–∞—Ä–∫–æ–¥"],
              item["–ü—Ä–µ–¥–º–µ—Ç"],
              item["–ë—Ä–µ–Ω–¥"],
              item["–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞"],
              item["–û–±—ä–µ–º (–¥–º¬≥)"],
              item["–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞"],
              item["–°—É–º–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è"],
              item["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤"],
              item["–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞"],
              item["–°–∫–∏–¥–∫–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ (%)"],
              item["–î–∞—Ç–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞"],
              item["–î–∞—Ç–∞ —Å–Ω–∏–∂–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞"]
            ]);
          });

          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –ë–ï–ó —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π —Ç—ã—Å—è—á (—Ñ–æ—Ä–º–∞—Ç 0,00)
          const storageNumericColumns = [9, 11, 12, 13, 14]; // –û–±—ä–µ–º, –°—É–º–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤, –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞, –°–∫–∏–¥–∫–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏
          storageNumericColumns.forEach(columnIndex => {
            const column = worksheet.getColumn(columnIndex);
            column.eachCell((cell, rowNumber) => {
              if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                cell.numFmt = '0,00'; // –§–æ—Ä–º–∞—Ç –ë–ï–ó —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–π —Ç—ã—Å—è—á —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º
              }
            });
          });

          console.log(`‚úÖ –û—Ç—á–µ—Ç '–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ' —Å–æ–∑–¥–∞–Ω —Å ${storageData.length} –∑–∞–ø–∏—Å—è–º–∏ –∑–∞ ${Date.now() - storageStartTime}–º—Å`);
        } else {
          console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ '–ü–ª–∞—Ç–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ' - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
          
          headers = [
            '–î–∞—Ç–∞',
            '–°–∫–ª–∞–¥',
            '–ê—Ä—Ç–∏–∫—É–ª Wildberries',
            '–†–∞–∑–º–µ—Ä',
            '–ë–∞—Ä–∫–æ–¥',
            '–ü—Ä–µ–¥–º–µ—Ç',
            '–ë—Ä–µ–Ω–¥',
            '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
            '–û–±—ä–µ–º (–¥–º¬≥)',
            '–¢–∏–ø —Ä–∞—Å—á–µ—Ç–∞',
            '–°—É–º–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è',
            '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞—Ä–∫–æ–¥–æ–≤',
            '–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∫–ª–∞–¥–∞',
            '–°–∫–∏–¥–∫–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ (%)',
            '–î–∞—Ç–∞ —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Ç–∞—Ä–∏—Ñ–∞',
            '–î–∞—Ç–∞ —Å–Ω–∏–∂–µ–Ω–∏—è —Ç–∞—Ä–∏—Ñ–∞'
          ];

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          worksheet.addRow(headers);
          const emptyHeaderRow = worksheet.getRow(1);
          emptyHeaderRow.font = { bold: true };
          emptyHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };
          
          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = Math.max(header.length + 5, 15);
          });
        }
        break;

      case 'acceptance':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let acceptanceTokenDoc;
        try {
          acceptanceTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!acceptanceTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ "–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞"...');
        const acceptanceStartTime = Date.now();

        try {
          // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–µ
          const acceptanceData = await fetchAcceptanceReport(acceptanceTokenDoc.apiKey, startDate, endDate);

          console.log(`üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç—á–µ—Ç–∞ "–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞". –ó–∞–ø–∏—Å–µ–π: ${acceptanceData.length}`);

          fileName = `–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞ - ${startDate}‚Äì${endDate}.xlsx`;

          if (acceptanceData && acceptanceData.length > 0) {
            console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ '–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞' —Å –¥–∞–Ω–Ω—ã–º–∏...");
            
            // –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
            headers = [
              '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ê—Ä—Ç–∏–∫—É–ª Wildberries',
              '–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∫–∏',
              '–ü—Ä–µ–¥–º–µ—Ç (–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤, —à—Ç.',
              '–°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏—ë–º–∫–∏, ‚ÇΩ'
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
            worksheet.addRow(headers);
            const acceptanceHeaderRow = worksheet.getRow(1);
            acceptanceHeaderRow.font = { bold: true };
            acceptanceHeaderRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };

            // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
            const acceptanceColumnWidths = [
              { wch: 20 }, // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏
              { wch: 15 }, // –ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏
              { wch: 20 }, // –ê—Ä—Ç–∏–∫—É–ª Wildberries
              { wch: 20 }, // –î–∞—Ç–∞ –ø—Ä–∏—ë–º–∫–∏
              { wch: 30 }, // –ü—Ä–µ–¥–º–µ—Ç (–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)
              { wch: 20 }, // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤, —à—Ç.
              { wch: 25 }  // –°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏—ë–º–∫–∏, ‚ÇΩ
            ];
            
            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = acceptanceColumnWidths[index]?.wch || Math.max(header.length + 5, 15);
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
            acceptanceData.forEach(item => {
              worksheet.addRow([
                item.giCreateDate ? new Date(item.giCreateDate).toLocaleDateString('ru-RU') : '',
                item.incomeId || '',
                item.nmID || '',
                item.shkCreateDate ? new Date(item.shkCreateDate).toLocaleDateString('ru-RU') : '',
                item.subjectName || '',
                item.count || 0,
                item.total || 0
              ]);
            });

            // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞ –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
            const acceptanceNumericColumns = [6, 7]; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤, –°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏—ë–º–∫–∏
            acceptanceNumericColumns.forEach(columnIndex => {
              const column = worksheet.getColumn(columnIndex);
              column.eachCell((cell, rowNumber) => {
                if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                  cell.numFmt = '[$-419]# ##0,00;[$-419]-# ##0,00'; // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å –ª–æ–∫–∞–ª—å—é
                }
              });
            });

            console.log(`‚úÖ –û—Ç—á–µ—Ç "–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞" —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - acceptanceStartTime}ms —Å ${acceptanceData.length} –∑–∞–ø–∏—Å—è–º–∏`);
            
          } else {
            console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞ '–ü–ª–∞—Ç–Ω–∞—è –ø—Ä–∏–µ–º–∫–∞' - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
            
            headers = [
              '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏',
              '–ê—Ä—Ç–∏–∫—É–ª Wildberries',
              '–î–∞—Ç–∞ –ø—Ä–∏—ë–º–∫–∏',
              '–ü—Ä–µ–¥–º–µ—Ç (–ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è)',
              '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤, —à—Ç.',
              '–°—É–º–º–∞—Ä–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏—ë–º–∫–∏, ‚ÇΩ'
            ];

            // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            worksheet.addRow(headers);
            const emptyHeaderRow = worksheet.getRow(1);
            emptyHeaderRow.font = { bold: true };
            emptyHeaderRow.fill = {
              type: 'pattern',
              pattern: 'solid',
              fgColor: { argb: 'FFE0E0E0' }
            };
            
            headers.forEach((header, index) => {
              const column = worksheet.getColumn(index + 1);
              column.width = Math.max(header.length + 5, 15);
            });
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏:', error);
          return NextResponse.json({ 
            error: `–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–ª–∞—Ç–Ω–æ–π –ø—Ä–∏–µ–º–∫–∏: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
          }, { status: 500 });
        }
        break;

      case 'products':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let productsTokenDoc;
        try {
          productsTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!productsTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤...');
        const productsStartTime = Date.now();

                 // –î–∞–Ω–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
         const realizationData: any[] = [];
         console.log('‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤');

                 // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏
         const { getCostPriceData, transformCostPriceToExcel, loadSavedCostPrices } = await import('@/app/lib/product-utils');

         // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
         const savedCostPrices = await loadSavedCostPrices(tokenId);

         // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ —Ü–µ–Ω–∞–º–∏
         const costPriceData = await getCostPriceData(productsTokenDoc.apiKey, savedCostPrices, realizationData);

        fileName = `–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ - ${startDate}‚Äì${endDate}.xlsx`;

        if (costPriceData && costPriceData.length > 0) {
          console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏...");
          
          // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Excel
          const productsExcelData = transformCostPriceToExcel(costPriceData);

          headers = [
            '–ê—Ä—Ç–∏–∫—É–ª –í–ë',
            '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
            '–ü—Ä–µ–¥–º–µ—Ç',
            '–ë—Ä–µ–Ω–¥',
            '–†–∞–∑–º–µ—Ä',
            '–®—Ç—Ä–∏—Ö–∫–æ–¥',
            '–¶–µ–Ω–∞',
            '–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å',
            '–ú–∞—Ä–∂–∞',
            '–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (%)',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö',
            '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
          ];

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
          worksheet.addRow(headers);
          const productsHeaderRow = worksheet.getRow(1);
          productsHeaderRow.font = { bold: true };
          productsHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };

          // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
          const productsColumnWidths = [
            { wch: 15 }, // –ê—Ä—Ç–∏–∫—É–ª –í–ë
            { wch: 20 }, // –ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞
            { wch: 35 }, // –ü—Ä–µ–¥–º–µ—Ç
            { wch: 15 }, // –ë—Ä–µ–Ω–¥
            { wch: 15 }, // –†–∞–∑–º–µ—Ä
            { wch: 15 }, // –®—Ç—Ä–∏—Ö–∫–æ–¥
            { wch: 15 }, // –¶–µ–Ω–∞
            { wch: 15 }, // –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å
            { wch: 15 }, // –ú–∞—Ä–∂–∞
            { wch: 20 }, // –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å
            { wch: 20 }, // –ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö
            { wch: 20 }, // –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
            { wch: 20 }, // –î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
          ];

          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = productsColumnWidths[index]?.wch || Math.max(header.length + 5, 15);
          });

          // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
          productsExcelData.forEach(item => {
            worksheet.addRow([
              item["–ê—Ä—Ç–∏–∫—É–ª –í–ë"],
              item["–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞"],
              item["–ü—Ä–µ–¥–º–µ—Ç"],
              item["–ë—Ä–µ–Ω–¥"],
              item["–†–∞–∑–º–µ—Ä"],
              item["–®—Ç—Ä–∏—Ö–∫–æ–¥"],
              item["–¶–µ–Ω–∞"],
              item["–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å"],
              item["–ú–∞—Ä–∂–∞"],
              item["–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (%)"],
              item["–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö"],
              item["–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"],
              item["–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"]
            ]);
          });

          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
          const productsNumericColumns = [7, 8, 9, 10]; // –¶–µ–Ω–∞, –°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å, –ú–∞—Ä–∂–∞, –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å
          productsNumericColumns.forEach(columnIndex => {
            const column = worksheet.getColumn(columnIndex);
            column.eachCell((cell, rowNumber) => {
              if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                cell.numFmt = '[$-419]# ##0,00;[$-419]-# ##0,00'; // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å –ª–æ–∫–∞–ª—å—é
              }
            });
          });

          console.log(`‚úÖ –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - productsStartTime}ms —Å ${productsExcelData.length} –∑–∞–ø–∏—Å—è–º–∏`);
          
        } else {
          console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
          
          headers = [
            '–ê—Ä—Ç–∏–∫—É–ª –í–ë',
            '–ê—Ä—Ç–∏–∫—É–ª –ø—Ä–æ–¥–∞–≤—Ü–∞',
            '–ü—Ä–µ–¥–º–µ—Ç',
            '–ë—Ä–µ–Ω–¥',
            '–†–∞–∑–º–µ—Ä',
            '–®—Ç—Ä–∏—Ö–∫–æ–¥',
            '–¶–µ–Ω–∞',
            '–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å',
            '–ú–∞—Ä–∂–∞',
            '–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (%)',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö',
            '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
            '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
          ];

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          worksheet.addRow(headers);
          const emptyHeaderRow = worksheet.getRow(1);
          emptyHeaderRow.font = { bold: true };
          emptyHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };
          
          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = Math.max(header.length + 5, 15);
          });
        }
        break;

      case 'finances':
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        await connectToDatabase();
        
        let financeTokenDoc;
        try {
          financeTokenDoc = await Token.findById(tokenId);
        } catch {
          return NextResponse.json({ error: '–ù–µ–≤–∞–ª–∏–¥–Ω—ã–π ID —Ç–æ–∫–µ–Ω–∞' }, { status: 400 });
        }
        
        if (!financeTokenDoc) {
          return NextResponse.json({ error: '–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 404 });
        }

        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∏–Ω–∞–Ω—Å–∞–º–∏ –†–ö
        const { fetchCampaigns, fetchSKUData, fetchFinancialData } = await import('@/app/lib/finance-utils');

        console.log('üöÄ –ù–∞—á–∞–ª–æ —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö"...');
        const financeStartTime = Date.now();

        // –ü–æ–ª—É—á–∞–µ–º –∫–∞–º–ø–∞–Ω–∏–∏
        const campaigns = await fetchCampaigns(financeTokenDoc.apiKey);
        
        // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –±—É—Ñ–µ—Ä–Ω—ã–º–∏ –¥–Ω—è–º–∏
        const financialData = await fetchFinancialData(financeTokenDoc.apiKey, startDate, endDate);

        console.log(`üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö". –ö–∞–º–ø–∞–Ω–∏–π: ${campaigns.length}, —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π: ${financialData.length}`);

        if (campaigns.length > 0 && financialData.length > 0) {
          console.log("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ª–∏—Å—Ç–∞ '–§–∏–Ω–∞–Ω—Å—ã –†–ö'...");
          
          // –ü–æ–ª—É—á–∞–µ–º SKU –¥–∞–Ω–Ω—ã–µ
          console.log(`üìä –ü–æ–ª—É—á–µ–Ω–∏–µ SKU –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–º–ø–∞–Ω–∏–π...`);
          const skuMap = await fetchSKUData(financeTokenDoc.apiKey, campaigns);
          console.log(`üìä –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö SKU –¥–∞–Ω–Ω—ã—Ö: ${skuMap.size} –∫–∞–º–ø–∞–Ω–∏–π`);
          
          // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É –∫–∞–º–ø–∞–Ω–∏–π –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
          const campaignMap = new Map(campaigns.map(c => [c.advertId, c]));
          
          // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö"
          const financeExcelData = financialData.map(record => {
            const campaign = campaignMap.get(record.advertId);
            return {
              "ID –∫–∞–º–ø–∞–Ω–∏–∏": record.advertId,
              "–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏": campaign?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è',
              "SKU ID": skuMap.get(record.advertId) || '',
              "–î–∞—Ç–∞": record.date,
              "–°—É–º–º–∞": record.sum,
              "–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è": record.bill === 1 ? '–°—á–µ—Ç' : '–ë–∞–ª–∞–Ω—Å',
              "–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏": record.type,
              "–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞": record.docNumber
            };
          });

          headers = [
            'ID –∫–∞–º–ø–∞–Ω–∏–∏',
            '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
            'SKU ID',
            '–î–∞—Ç–∞',
            '–°—É–º–º–∞',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
            '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
            '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞'
          ];

          fileName = `–§–∏–Ω–∞–Ω—Å—ã –†–ö - ${startDate}‚Äì${endDate}.xlsx`;

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
          worksheet.addRow(headers);

          // –°—Ç–∏–ª–∏–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
          const financesHeaderRow = worksheet.getRow(1);
          financesHeaderRow.font = { bold: true };
          financesHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };

          // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –ª–∏—Å—Ç–∞ "–§–∏–Ω–∞–Ω—Å—ã –†–ö"
          const financeColumnWidths = [
            { wch: 15 }, // ID –∫–∞–º–ø–∞–Ω–∏–∏
            { wch: 30 }, // –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏
            { wch: 15 }, // SKU ID
            { wch: 15 }, // –î–∞—Ç–∞
            { wch: 15 }, // –°—É–º–º–∞
            { wch: 20 }, // –ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è
            { wch: 15 }, // –¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏
            { wch: 20 }, // –ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞
          ];
          
          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = financeColumnWidths[index]?.wch || Math.max(header.length + 5, 15);
          });

          // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
          financeExcelData.forEach(item => {
            worksheet.addRow([
              item["ID –∫–∞–º–ø–∞–Ω–∏–∏"],
              item["–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏"],
              item["SKU ID"],
              item["–î–∞—Ç–∞"],
              item["–°—É–º–º–∞"],
              item["–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è"],
              item["–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏"],
              item["–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞"]
            ]);
          });

          // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —á–∏—Å–ª–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Ç—á–µ—Ç–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –†–ö –≤ —Ä–æ—Å—Å–∏–π—Å–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
          const financeNumericColumns = [5]; // –°—É–º–º–∞
          financeNumericColumns.forEach(columnIndex => {
            const column = worksheet.getColumn(columnIndex);
            column.eachCell((cell, rowNumber) => {
              if (rowNumber > 1) { // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
                cell.numFmt = '[$-419]# ##0,00;[$-419]-# ##0,00'; // –†–æ—Å—Å–∏–π—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Å –ª–æ–∫–∞–ª—å—é
              }
            });
          });

          console.log(`‚úÖ –õ–∏—Å—Ç "–§–∏–Ω–∞–Ω—Å—ã –†–ö" —Å–æ–∑–¥–∞–Ω –∑–∞ ${Date.now() - financeStartTime}ms —Å ${financeExcelData.length} –∑–∞–ø–∏—Å—è–º–∏`);
          
        } else {
          console.log("‚ÑπÔ∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–∏—Å—Ç–∞ '–§–∏–Ω–∞–Ω—Å—ã –†–ö' - —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–π —à–∞–±–ª–æ–Ω");
          
          headers = [
            'ID –∫–∞–º–ø–∞–Ω–∏–∏',
            '–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏', 
            'SKU ID',
            '–î–∞—Ç–∞',
            '–°—É–º–º–∞',
            '–ò—Å—Ç–æ—á–Ω–∏–∫ —Å–ø–∏—Å–∞–Ω–∏—è',
            '–¢–∏–ø –æ–ø–µ—Ä–∞—Ü–∏–∏',
            '–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞'
          ];

          fileName = `–§–∏–Ω–∞–Ω—Å—ã –†–ö - ${startDate}‚Äì${endDate}.xlsx`;

          // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –ø—É—Å—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
          worksheet.addRow(headers);
          const emptyHeaderRow = worksheet.getRow(1);
          emptyHeaderRow.font = { bold: true };
          emptyHeaderRow.fill = {
            type: 'pattern',
            pattern: 'solid',
            fgColor: { argb: 'FFE0E0E0' }
          };
          
          headers.forEach((header, index) => {
            const column = worksheet.getColumn(index + 1);
            column.width = Math.max(header.length + 5, 15);
          });
        }
        break;

      default:
        return NextResponse.json({ error: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ—Ç—á—ë—Ç–∞' }, { status: 400 });
    }

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –±—É—Ñ–µ—Ä
    const buffer = await workbook.xlsx.writeBuffer();

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∞–π–ª
    return new NextResponse(buffer, {
      headers: {
        'Content-Type': 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
        'Content-Disposition': `attachment; filename="${encodeURIComponent(fileName)}"`,
      },
    });

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞:', error);
    return NextResponse.json(
      { error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á—ë—Ç–∞' },
      { status: 500 }
    );
  }
} 